1999-12-07   Gisle Aas <gisle@aas.no>

    Release 2.99_93

    Documentation update

    $p->bool_attr_value renamed as $p->boolean_attribute_value

    Internal renaming: attrspec --> argspec

    Introduced internal 'enum argcode' in hparser.c

    Added eg/hrefsub



1999-12-05   Gisle Aas <gisle@aas.no>

    Release 2.99_92

    More documentation patches from Michael

    Renamed 'token1' as 'token0' as suggested by Michael

    For artificial end tags we now report 'tokens', but not 'tokenpos'.

    Boolean attribute values show up as (0, 0) in 'tokenpos' now.

    If $p->bool_attr_value is set it will influence 'tokens'

    Fix for core dump when parsing <a "> when $p->strict_names(0).
    Based on fix by Michael.

    Will av_extend() the tokens/tokenspos arrays.

    New test suite script by Michael: t/attrspec.t



1999-12-04   Gisle Aas <gisle@aas.no>

    Release 2.99_91

    Implemented attrspec 'offset'

    Documentation patch from Michael

    Some more cleanup/updated TODO



1999-12-03   Gisle Aas <gisle@aas.no>

    Release 2.99_90 (first beta for 3.00)

    Using "realloc" as a parameter name in grow_tokens created
    problems for some people.  Fix by Paul Schinder <schinder@pobox.com>

    Patch by Michael that makes array handler destinations really work.

    Patch by Michael that make HTML::TokeParser use this.  This gave a
    a speedup of about 80%.

    Patch by Michael that makes t/cases into a real test.

    Small HTML::Parser documentation patch by Michael.

    Renamed attrspec 'origtext' to 'text' and 'decoded_text' to 'dtext'

    Split up Parser.xs.  Moved stuff into hparser.c and util.c

    Dropped html_ prefix from internal parser functions.

    Renamed internal function html_handle() as report_event().



1999-12-02   Gisle Aas <gisle@aas.no>

   Release 2.99_17

   HTML::Parser documentation patch from Michael.

   Fix memory leaks in html_handler()

   Patch that makes an array legal as handler destination.
   Also from Michael.

   The end of marked sections does not eat successive newline
   any more.

   The artificial end event for empty tag in xml_mode did not
   report an empty origtext.

   New constructor option: 'api_version'



1999-12-01   Gisle Aas <gisle@aas.no>

   Release 2.99_16

   Support "event" in argspec.  It expands to the name of the
   handler (minus "default").

   Fix core dump for large start tags.  The tokens_grow() routine
   needed an adjustment.  Added test for this; t/largstags.t.



1999-11-30   Gisle Aas <gisle@aas.no>

   Release 2.99_15

   Major restructuring/simplification of callback interface based on
   initial work by Michael.  The main news is that you now need to
   tell what arguments you want to be provided to your callbacks.

   The following parser options has been eliminated:

       $p->decode_text_entities
       $p->keep_case
       $p->v2_compat
       $p->pass_self
       $p->attr_pos



1999-11-26   Gisle Aas <gisle@aas.no>

   Release 2.99_14

   Documentation update by Michael A. Chase.

   Fix for declaration parsing by Michael A. Chase.

   Workaround for perl5.004_05 bug. Can't return &PL_sv_undef.



1999-11-22   Gisle Aas <gisle@aas.no>

   Release 2.99_13

   New Parser.pm POD based on initial work by Michael A. Chase.
   All new features should now be described.

   $p->callback(start => undef) will not reset the callback.

   $p->xml_mode() did not parse attributes correct because
   HCTYPE_NOT_SPACE_EQ_SLASH_GT flag was never set.

   A few more tests.



1999-11-18   Gisle Aas <gisle@aas.no>

   Release 2.99_12

   Implemented $p->attr_pos attribute.  This causes attr positions
   within $origtext of the start tag to be reported instead of the
   attribute values.  The positions are reported as 4 numbers; end of
   previous attr, start of this attr, start of attr value, and end of
   attr.  This should make substr() manipulations of $origtext easy.

   Implemented $p->unbroken_text attribute.  This makes sure that
   text segments are never broken and given back as separate text
   callbacks.  It delays text callbacks until some other markup
   has been recognized.

   More English corrections by Michael A. Chase.

   HTML::LinkExtor now recognizes even more URI attributes as
   suggested by Sean M. Burke <sburke@netadventure.net>

   Completed marked sections support.  It is also now a compile
   time decision if you want this supported or not.  The only
   drawback of enabling it should be a possible parsing speed
   reduction.  I have not measured this yet.

   The keys for callbacks initialized in the constructor are now
   suffixed with "_cb".

   Renamed $p->pass_cbdata to $p->pass_self.

   Added magic number to the p_state struct.



1999-11-17   Gisle Aas <gisle@aas.no>

   Release 2.99_11

   Don't leak $@ modifications from HTML::Parser constructor.

   Included HTML::Parser POD.

   Marked sections almost work.  CDATA and RCDATA should work.

   For tags that take us into literal_mode; <script>, <style>,
   <xmp>, we did not recognize the end tag unless it was written
   in all lower case.



1999-11-16   Gisle Aas <gisle@aas.no>

   Release 2.99_10

   The mkhctype and mkpfunc scripts were using \z inside RE.  This
   did not work for perl5.004.  Replaced them with plain old
   dollar signs.



1999-11-15   Gisle Aas <gisle@aas.no>

   Release 2.99_09

   Grammar fixes by Michael A. Chase <mchase@ix.netcom.com>

   Some more test suite patches for Win32 by Michael A. Chase
   <mchase@ix.netcom.com>

   Implemented $p->strict_names attribute.  By default we now
   allow almost anything in tag and attribute names.  This is much
   closer to the behaviour of some popular browsers.  This allows us
   to parse broken tags like this example from the LWP mailing list:
   <IMG ALIGN=MIDDLE SRC=newprevlstGr.gif ALT=[PREV LIST] BORDER=0>

   Introduced some tables in "hctype.h" and "pfunc.h".  These
   are built by the corresponding "mk..." script.



1999-11-10   Gisle Aas <gisle@aas.no>

   Release 2.99_08

   Make Parser.xs compile on perl5.004_05 too.

   New callback called 'default'.  This will be called for any
   document text no other callback shows an interest in.

   Patch by Michael A. Chase <mchase@ix.netcom.com> that should
   help clean up files for the test suite on Win32.

   Can now set up various attributes with key/value pairs passed to
   the constructor.

   $p->parse_file() will open the file in binmode()

   Pass complete processing instruction tag as second argument
   to process callback.

   New boolean attribute v2_compat.  This influences how attributes
   are reported for start tags.

   HTML::Filter now filters process instructions too.

   Faster HTML::LinkExtor by taking advantage of the new
   callback interface.  The module now also uses URI.pm (instead
   of the old URI::URL) to do URI-absolutations.

   Faster HTML::TokeParser by taking advantage of new
   accum interface.



1999-11-09   Gisle Aas <gisle@aas.no>

   Release 2.99_07

   Entities in attribute values are now always expanded.

   If you set the $p->decode_text_entities to a true value, then
   you don't have to decode the text yourself.

   In xml_mode we don't report empty element tags as a start tag
   with an extra parameter any more.  Instead we generate an artificial
   end tag.

   'xml_mode' now implies 'keep_case'.

   The parser now keeps its own copy of the bool_attr_value value.

   Avoid memory leak for text callbacks

   Avoid using ERROR as a goto label.

   Introduced common internal accessor function for all boolean parser
   attributes.

   Tweaks to make Parser.xs compile under perl5.004.



1999-11-08   Gisle Aas <gisle@aas.no>

   Release 2.99_06

   Internal fast decode_entities().   By using it we are able to make
   the HTML::Entities::decode function 6 times faster than the old one
   implemented in pure Perl.

   $p->bool_attr_value() can be set to influence the value that
   boolean attributes will be assigned.  The default is to assign
   a value identical to the attribute name.

   Process instructions are reported as "PI" in @accum
   
   $p->xml_mode(1) modifies how processing instructions are terminated
   and allows "/>" at the end of start tags.

   Turn off optimizations when compiling with gcc on Solaris.  Avoids
   what we believe to be a compiler bug.  Should probably figure out
   which versions of gcc have this bug.



1999-11-05   Gisle Aas <gisle@aas.no>

   Release 2.99_05

   The previous release did not even compile.  I forgot to try 'make test'
   before uploading.



1999-11-05   Gisle Aas <gisle@aas.no>

   Release 2.99_04

   Generalized <XMP>-support to cover all literal parsing.  Currently
   activated for <script>, <style>, <xmp> and <plaintext>.



1999-11-05   Gisle Aas <gisle@aas.no>

   Release 2.99_03

   <XMP>-support.

   Allow ":" in tag and attribute names

   Include rest of the HTML::* files from the old HTML::Parser
   package.  This should make testing easier.



1999-11-04   Gisle Aas <gisle@aas.no>

   Release 2.99_02

   Implemented keep_case() option.  If this attribute is true, then
   we don't lowercase tag and attribute names.

   Implemented accum() that takes an array reference.  Tokens are
   pushed onto this array instead of sent to callbacks.

   Implemented strict_comment().



1999-11-03   Gisle Aas <gisle@aas.no>

   Release 2.99_01

   Baseline of XS implementation



1999-11-05   Gisle Aas <gisle@aas.no>

   Release 2.25

   Allow ":" in attribute names as a workaround for Microsoft Excel
   2000 which generates such files.

   Make deprecate warning if netscape_buggy_comment() method is
   used.  The method is used in strict_comment().

   Avoid duplication of parse_file() method in HTML::HeadParser.



1999-10-29   Gisle Aas <gisle@aas.no>

   Release 2.24

   $p->parse_file() will not close a handle passed to it any more.
   If passed a filename that can't be opened it will return undef
   instead of raising an exception, and strings like "*STDIN" are not
   treated as globs any more.

   HTML::LinkExtor knowns about background attribute of <tables>.
   Patch by Clinton Wong <clintdw@netcom.com>

   HTML::TokeParser will parse large inline strings much faster now.
   The string holding the document must not be changed during parsing.



1999-06-09   Gisle Aas <gisle@aas.no>

   Release 2.23

   Documentation updates.



1998-12-18   Gisle Aas <aas@sn.no>

   Release 2.22

   Protect HTML::HeadParser from evil $SIG{__DIE__} hooks.



1998-11-13   Gisle Aas <aas@sn.no>

   Release 2.21

   HTML::TokeParser can now parse strings directly and does the
   right thing if you pass it a GLOB.  Based on patch by
   Sami Itkonen <si@iki.fi>.

   HTML::Parser now allows space before and after "--" in Netscape
   comments.  Patch by Peter Orbaek <poe@daimi.au.dk>.



1998-07-08   Gisle Aas <aas@sn.no>

   Release 2.20

   Added HTML::TokeParser.  Check it out!



1998-07-07   Gisle Aas <aas@sn.no>

   Release 2.19

   Don't end a text chunk with space when we try to avoid breaking up
   words.



1998-06-22   Gisle Aas <aas@sn.no>

   Release 2.18

   HTML::HeadParser->parse_file will now stop parsing when the
   <body> starts as it should.

   HTML::LinkExtor more easily subclassable by introducing the
   $self->_found_link method.



1998-04-28   Gisle Aas <aas@sn.no>

   Release 2.17

   Never split words (a sequence of non-space) between two invocations
   of $self->text.  This is just a simplification of the code that tried
   not to break entities.
   
   HTML::Parser->parse_file now use smaller chunks as already
   suggested by the HTML::Parser documentation.



1998-04-02   Gisle Aas <aas@sn.no>

   Release 2.16
   
   The HTML::Parser could some times break hex entites (like &#xFFFF;)
   in the middle.

   Removed remaining forced dependencies on libwww-perl modules.  It
   means that all tests should now pass, even if libwww-perl was not
   installed previously.

   More tests.



1998-04-01   Gisle Aas <aas@sn.no>

   Release 2.14, HTML::* modules unbundled from libwww-perl-5.22.
